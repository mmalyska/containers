---
name: "Image: Rebuild"

on:
  push:
    branches:
      - main
    paths:
      - "apps/**"
      - "!apps/**/metadata.json"
      - "!apps/**/README.md"

jobs:
  get-changes:
    name: Collect changes
    runs-on: ubuntu-latest
    outputs:
      addedOrModifiedImages: ${{ steps.collect-changes.outputs.addedOrModifiedImages }}
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Collect changes
        id: collect-changes
        uses: ./.github/actions/collect-changes

  generate-build-matrix:
    name: Generate matrix for building images
    runs-on: ubuntu-latest
    needs: ["get-changes"]
    outputs:
      matrix: ${{ steps.get-changed.outputs.changes }}
    if: ${{ needs.get-changes.outputs.addedOrModifiedImages }} != '[]'
    steps:
      - name: Install tools
        run: sudo apt-get install moreutils jo

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0

      # - name: Fetch modified images
      #   id: get-changed
      #   shell: bash
      #   run: |
      #     declare -a changes_array=()
      #     while read -r app
      #     do
      #       while read -r channel
      #       do
      #         change="$(jo app="$app" channel="$channel")"
      #         changes_array+=($change)
      #       done < <(jq -r '.channels[] | .name' "./apps/$app/metadata.json")
      #     done < <(echo '${{ needs.get-changes.outputs.addedOrModifiedImages }}' | jq --raw-output -c '.[]')

      #     output="$(jo -a ${changes_array[*]})"
      #     echo "changes=${output}" >> $GITHUB_OUTPUT

      - name: Fetch modified images
        id: get-changed
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const fetchAction = await import('${{ github.workspace }}/.github/scripts/index.mjs');
            let modifiedImages = '${{ toJSON(needs.get-changes.outputs.addedOrModifiedImages) }}';
            let apps = modifiedImages.split(',').filter(Boolean);
            
            if (apps == 'ALL') {
              await fetchAction.changes(glob, context, github, core, all: true);
            } else {
              await fetchAction.appChanges(core, apps);
            }

  images-build:
    uses: mmalyska/containers/.github/workflows/action-image-build.yaml@main
    needs:
      - generate-build-matrix
    with:
      imagesToBuild: "${{ needs.generate-build-matrix.outputs.matrix }}"
      pushImages: "true"
      updateMetadata: "true"
    secrets: inherit
