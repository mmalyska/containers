---
name: "Manual Release"

concurrency:
  group: container-release
  cancel-in-progress: false

on:
  workflow_dispatch:
    inputs:
      apps:
        description: "Apps (ex: radarr,sonarr)"
        default: "ALL"
        required: true
      channels:
        description: "Channels (ex: main,develop)"
        default: "stable"
        required: true
      push:
        description: "Push"
        default: "false"
        required: true

env:
  TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  generate-build-matrix:
    name: Generate matrix for building images
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.determine-images.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Install tools
        run: sudo apt-get install moreutils jo

      - name: Generate Token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        id: generate-token
        with:
          app_id: "${{ secrets.BOT_APP_ID }}"
          private_key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Fetch new app versions
        id: determine-images
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const fetchAction = await import('${{ github.workspace }}/.github/scripts/index.mjs');
            let apps = core.getInput['apps']
              .split(',')
              .filter(Boolean);
            let channels = core.getInput['channels']
              .split(',')
              .filter(Boolean)
              .map(e => ({ "name": e, "stable": true }));
            
            if (apps == 'ALL') {
              await fetchAction.changes(glob, context, github, core, all: true);
            } else {
              await fetchAction.appChanges(core, apps, channels);
            }

  images-build:
    uses: mmalyska/containers/.github/workflows/action-image-build.yaml@main
    if: ${{ needs.generate-build-matrix.outputs.matrix != '[]' && needs.generate-build-matrix.outputs.matrix != '' }}
    needs: ["generate-build-matrix"]
    with:
      imagesToBuild: "${{ needs.generate-build-matrix.outputs.matrix }}"
      pushImages: "${{ github.event.inputs.push }}"
      updateMetadata: "${{ github.event.inputs.push }}"
    secrets: inherit
